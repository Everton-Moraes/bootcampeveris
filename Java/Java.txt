Coeso e com baixo acoplamento


SOLID
S ingle Resposibility Principle / Príncipio da Responsabilidade Única
O pen Closed Principle / Príncipio Aberto Fechado
L iskov Substitution Principle / Príncipio da Substituição de Liskov
I nteface Segregation Principle / Príncipio da Segregação da Interface
D ependecy Inversion Principle / Príncipio da Inversão de Dependência


Single Resposibility Principle - Uma classe deve ter um, e somente um motivo para mudar

Open Closed Principle - Você deve poder estender um comportamento de classe, sem modificar (objetos abertos para extensão, mas fechado para modificação)

Liskov Substitution Principle - Classes derivadas deve ser substituíveis por suas classes base.

Inteface Segregation Principle - Faça interfaces refinadas que são específicas do cliente

Dependecy Inversion Principle - Dependa de abstrações e não de implementações



----------------Trabalhando com Arrays----------------------------------------
Faz parte do Java.util
Armazenam elementos do mesmo tipo


int meuArray = new int[7];

int[] meuArray = {1,2,3,4,5,6,7};



